0.24.2	UNRELEASED

 * Added ``porcelain.shortlog`` function to summarize commits by author,
   similar to git shortlog. (Muhammad Usama, #1693)

 * Fix merge functionality to gracefully handle missing optional merge3 dependency
   by raising informative ImportError with installation instructions.
   (Jelmer Vernooĳ, #1759)

 * Fix worktree CLI tests to properly change to repository directory.
   (Jelmer Vernooĳ, #1738)

 * Add ``temporary_worktree`` context manager for creating temporary worktrees
   that are automatically cleaned up. (Jelmer Vernooĳ)

 * Add ``exist_ok`` parameter to ``add_worktree`` to allow creation with
   existing directories. (Jelmer Vernooĳ)

 * Add colorized diff support for the ``show`` command with ``--color``
   argument. (Jelmer Vernooĳ, #1741)

 * Fix Windows path handling in ``_ensure_parent_dir_exists`` to correctly
   handle drive letters during checkout operations. (Jelmer Vernooĳ, #1751)

 * Fix Windows config loading to only use current Git config path,
   avoiding loading older config files.  (Jelmer Vernooĳ, #1732)

 * Add interactive rebase support with ``git rebase -i``, including support
   for pick, reword, edit, squash, fixup, drop, exec, and break commands.
   (Jelmer Vernooĳ, #1696)

 * Fix handling of CRLF line endings with ``core.autocrlf = input`` to prevent
   unchanged files from appearing as unstaged in status.
   (Jelmer Vernooĳ, #1770)

 * Add support for ``http.extraHeader`` configuration to pass additional HTTP
   headers to the server when communicating over HTTP(S).
   (Jelmer Vernooĳ, #1769)

 * Optimize LFS filter performance by avoiding redundant disk writes when
   checking file status. The LFS store now checks if objects already exist
   before writing them to disk, significantly improving ``git status``
   performance in repositories with many LFS-tracked files.
   (Jelmer Vernooĳ, #1789)

 * Add filter server support. (Jelmer Vernooĳ, #1789)

 * Add support for ``patiencediff`` algorithm in diff.
   (Jelmer Vernooĳ, #1795)

 * Add IPv6 support for git:// protocol URLs.
   (Jelmer Vernooĳ, #1796)

0.24.1	2025-08-01

 * Require ``typing_extensions`` on Python 3.10.
   (Jelmer Vernooĳ, #1735)

0.24.0	2025-08-01

 * Split out ``WorkTree`` from ``Repo``. (Jelmer Vernooĳ)

 * Add comprehensive git worktree support including ``WorkTreeContainer``
   class, ``WorkTreeInfo`` objects, and full CLI/porcelain implementations
   for add, list, remove, prune, lock, unlock, and move operations.
   (Jelmer Vernooĳ, #1710, #1632)

 * Add support for ``-a`` argument to
   ``dulwich.cli.commit``. (Jelmer Vernooĳ)

 * Add support for ``--amend`` argument to
   ``dulwich.cli.commit`` and ``dulwich.porcelain.commit``. (Jelmer Vernooĳ)

 * Add support for merge drivers.
   (Jelmer Vernooĳ)

 * Add support for Git revision syntax operators ``~``, ``^``, ``^{}``,
   ``@{N}``, and ``:path`` in ``dulwich.objectspec.parse_object``,
   e.g. ``HEAD~1``, ``HEAD^2``, ``v1.0^{}``, ``HEAD@{1}``, ``HEAD:README``.
   (Jelmer Vernooĳ)

 * Add support for ``GIT_CONFIG_GLOBAL`` and ``GIT_CONFIG_SYSTEM``
   environment variables to override global and system configuration
   paths. (Jelmer Vernooĳ, #1193)

 * ``dulwich.porcelain.diff``: Support diffing two commits
   and diffing cached and working tree. (Jelmer Vernooĳ)

 * Add ``format-patch`` command in porcelain. (Jelmer Vernooĳ)

 * Add functions for creating bundles and ``BundleClient``
   for interacting with bundles. (Jelmer Vernooĳ, #1246)

 * Add support for ``core.commitGraph`` configuration setting to control
   whether commit-graph files are used for performance optimization.
   (Jelmer Vernooĳ)

 * Add ``reflog`` command in porcelain. (Jelmer Vernooĳ)

 * Add ``locked_ref`` context manager for atomic ref operations.
   (Jelmer Vernooĳ)

 * Fix bug in ``DiskRefsContainer._remove_packed_ref`` that prevented
   packed ref deletions from being persisted to disk.
   (Jelmer Vernooĳ)

 * Optimize writing unchanged refs by avoiding unnecessary fsync
   when ref already has the desired value. File locking behavior
   is preserved to ensure proper concurrency control.
   (Dan Villiom Podlaski Christiansen, Jelmer Vernooĳ, #1120)

 * Fix Unicode filename encoding issue on Windows where non-ASCII
   filenames were corrupted during clone/checkout operations.
   (Jelmer Vernooĳ, #203)

0.23.2	2025-07-07

 * Print deprecations on usage, not import.
   (Alyssa Coghlan, #1650)

 * Add support for ``core.protectHFS`` configuration setting to protect
   against paths that could be misinterpreted on HFS+ filesystems.
   (Jelmer Vernooĳ, #246)

 * Only write Git index extensions when they contain meaningful data.
   Previously, dulwich would write empty extensions to the index file,
   causing unnecessary bloat.
   (Andrew Shadura, Jelmer Vernooĳ, #1643)

 * Document that ``porcelain.push`` returns per-ref status information
   in the ``SendPackResult`` object. Added test coverage to verify this
   functionality works as expected.
   (Jelmer Vernooĳ, #780)

 * Add porcelain submodule commands: ``submodule_update``, ``submodule_add``g
   CLI command, and ``submodule_update`` CLI command. Add ``--recurse-submodules``
   option to ``clone`` command. (#506, Jelmer Vernooĳ)

 * Support popping stashes. (Jelmer Vernooĳ)

 * Add support for parsing Git attributes from .gitattributes files.
   This enables proper handling of text/binary detection, line ending
   normalization, and filter specifications for files.
   (Jelmer Vernooĳ, #1211)

 * Add git bisect functionality including core bisect logic, porcelain
   commands (bisect_start, bisect_bad, bisect_good, bisect_skip,
   bisect_reset, bisect_log, bisect_replay), and CLI support.
   (Jelmer Vernooĳ, #1631)

 * Fix ``porcelain.describe()`` to dynamically determine hash length
   based on uniqueness, matching git describe behavior more closely.
   Previously used a hardcoded 7-character hash length.
   (Jelmer Vernooĳ, #824)

 * Add test for ``porcelain.add()`` to verify files can be added when
   the current working directory is within a gitignored directory.
   (Jelmer Vernooĳ, #550)

 * ParamikoSSHVendor now reads SSH configuration from ~/.ssh/config.
   Host settings including hostname, user, port, and identity file are
   now respected when establishing SSH connections.
   (Jelmer Vernooĳ, #443)

0.23.1	2025-06-30

 * Support ``untracked_files="normal"`` argument to ``porcelain.status``,
   and make this the default.
   (Jelmer Vernooĳ, #835)

 * Fix ``parse_commit`` to properly dereference annotated tags when
   checking out tags. Previously, checking out an annotated tag would
   fail with a KeyError.
   (Jelmer Vernooĳ, #1638)

 * Handle different file type transitions properly in ``update_working_tree``
   (Jelmer Vernooĳ, #1638)

 * Fix KeyError when pulling from a shallow clone. Handle missing commits
   gracefully in graph traversal operations for shallow repositories.
   (Jelmer Vernooĳ, #813)

 * Return symrefs from ls_refs. (Jelmer Vernooĳ, #863)

 * Support short commit hashes in ``porcelain.reset()``.
   (Jelmer Vernooĳ, #1154)

 * Support dumb repository access.
   (Jelmer Vernooĳ, #1097)

 * Fix TypeError when cloning repositories with bytes paths on Windows.
   (Jelmer Vernooĳ, #973)

 * Support ``depth`` for local clones.
   (Jelmer Vernooĳ)

 * Add basic support for managing Notes. (Jelmer Vernooĳ)

 * Add basic ``cherry-pick`` subcommand.  (#1599, Jelmer Vernooĳ)

 * Add ``revert`` command to ``dulwich.porcelain`` and CLI.
   (#1599, Jelmer Vernooĳ)

 * Add annotate support as well as ``annotate`` and ``blame``
   commands.  (#245, Jelmer Vernooĳ)

 * Fix ``apply_delta`` to raise ``ApplyDeltaError`` instead of ``AssertionError``
   when the source buffer size doesn't match the delta header. This issue only
   affected the pure Python implementation when the Rust extension was not
   available. The Rust implementation already raised the correct exception.
   (#1606, Jelmer Vernooĳ)

 * Fix ``porcelain.reset --hard`` to properly delete files that don't exist in
   the target tree. Previously, when resetting to a remote branch, files deleted
   in the remote were not removed locally due to incorrect path normalization
   on Windows. (#840, Jelmer Vernooĳ)

 * Add support for includes in configuration files.
   (#1216, Jelmer Vernooĳ)

 * Support timeouts for HTTP client operations.  (Jelmer Vernooĳ)

 * Add support for ``reset --mixed`` and ``reset --soft`` modes in
   ``porcelain.reset()`` and the CLI. Mixed reset updates HEAD and index
   but leaves working tree unchanged. Soft reset only updates HEAD.
   (Jelmer Vernooĳ)

 * Apply line-ending normalization in ``build_index_from_tree`` to respect
   ``core.autocrlf`` configuration during checkout operations.
   (Jelmer Vernooĳ, #663)

 * Add ``prune`` method to object stores for cleaning up orphaned temporary
   pack files. This is now called by ``garbage_collect()`` to match Git's
   behavior. Also added ``prune`` command to ``dulwich.porcelain``.
   (Jelmer Vernooĳ, #558)

 * Fix ``porcelain.remove()`` to work correctly when called from a directory
   other than the repository root. Relative paths are now interpreted as
   relative to the repository root rather than the current working directory.
   (Jelmer Vernooĳ, #821)

 * Add support for auto garbage collection, and invoke from
   some porcelain commands. (Jelmer Vernooĳ, #1600)

 * Add ``filter-branch`` support to ``dulwich.porcelain`` and
   ``dulwich.filter_branch`` module for rewriting commit history.
   Supports filtering author, committer, and message fields.
   (#745, Jelmer Vernooĳ)

 * Add ``mv`` porcelain command. (Jelmer Vernooĳ, #1633)

0.23.0	2025-06-21

 * Add basic ``rebase`` subcommand. (Jelmer Vernooĳ)

 * Add ``gc`` command to ``dulwich.porcelain.`` (Jelmer Vernooĳ, #92)

 * Add ``unpack-objects`` plumbing command to unpack objects from pack files
   into loose objects in the repository. This command extracts all objects
   from a pack file and writes them to the object store as individual files.
   Available in both ``dulwich.porcelain.unpack_objects()`` and as a CLI
   command ``dulwich unpack-objects``. (Jelmer Vernooĳ)

 * Add ``merge-tree`` plumbing command to ``dulwich.porcelain`` and CLI.
   This command performs three-way tree merges without touching the working
   directory or creating commits, similar to ``git merge-tree``. It outputs
   the merged tree SHA and lists any conflicted paths. (Jelmer Vernooĳ)

 * Add ``porcelain.count_objects()`` function to count unpacked objects and
   their disk usage. Returns a tuple of (count, size) for simple usage or
   a ``CountObjectsResult`` dataclass with detailed statistics when
   ``verbose=True``. (Jelmer Vernooĳ)

 * Add support for pack index format version 3. This format supports variable
   hash sizes to enable future SHA-256 support. The implementation includes
   reading and writing v3 indexes with proper hash algorithm identification
   (1 for SHA-1, 2 for SHA-256). Note that SHA-256 support itself is not yet
   implemented and will raise NotImplementedError. (Jelmer Vernooĳ)

 * Fix ``LocalGitClient`` assertion error when fetching externally cloned repositories
   into ``MemoryRepo``. Previously, the client would fail with an AssertionError
   when trying to process pack data from repositories that were cloned externally.
   (Jelmer Vernooĳ, #1179)

 * Add support for ``os.PathLike`` objects throughout the API. Functions that
   accept file paths now support ``pathlib.Path`` objects in addition to
   strings and bytes. This includes repository operations, configuration file
   handling, ignore file processing, and all major entry points.
   (Jelmer Vernooĳ, #1074)

 * Add support for ``format`` argument to ``Repo.init()`` and ``Repo.init_bare()``
   to specify repository format version (0 or 1). This allows creating repositories
   with different format versions by setting the ``core.repositoryformatversion``
   configuration value. (Jelmer Vernooĳ)

 * Fix Rust implementation of ``sorted_tree_items()`` to correctly handle submodules.
   Previously, submodules (mode 0o160000) were incorrectly treated as directories
   in the sorting order, causing different results compared to the Python
   implementation. (Jelmer Vernooĳ, #1325)

 * Fix ``porcelain.add()`` to stage both untracked and modified files when no
   paths are specified. Previously, only untracked files were staged, inconsistent
   with Git's behavior. Now behaves like ``git add -A`` when called without paths.
   (Jelmer Vernooĳ, #746)

 * Fix ``porcelain.add()`` symlink handling to allow adding symlinks that point
   outside the repository. Previously, the function would fail when trying to
   add a symlink pointing outside the repo due to aggressive path resolution.
   Now only resolves the parent directory for symlinks, matching Git's behavior.
   (Jelmer Vernooĳ, #789)

 * Fix ``porcelain.add()`` when adding repository root path or directories.
   Previously, adding the repository path itself would incorrectly stage
   ``b'./'`` instead of the actual untracked files, leading to
   repository corruption.  (Jelmer Vernooĳ, #1178, #655)

 * Improve ``porcelain.add()`` documentation to correctly describe default
   behavior. (Jelmer Vernooĳ, #895)

 * Fix gitignore pattern matching for directory negation patterns. Patterns like
   ``!data/*/`` now correctly unignore direct subdirectories while still ignoring
   files in the parent directory, matching Git's behavior. The ``is_ignored()`` method
   now documents that directory paths should end with ``/`` for consistent behavior.
   (Jelmer Vernooĳ, #1203)

 * Support quote_path flag for ignore checking. (Jelmer Vernooĳ)

 * Clarify documentation for ``IgnoreFilter`` and ``IgnoreFilterManager`` to
   explicitly state that directory paths should include trailing slashes when
   checking if they are ignored. This matches Git's behavior and ensures
   consistent results. (Jelmer Vernooĳ, #972)

 * Add support for Git's ``feature.manyFiles`` configuration and index version 4.
   This enables faster Git operations in large repositories through path prefix
   compression (30-50% smaller index files) and optional hash skipping for faster
   writes. Supports ``feature.manyFiles``, ``index.version``, and ``index.skipHash``
   configuration options.
   (Jelmer Vernooĳ, #1061, #1462)

 * In dulwich.porcelain docstring, list functions by their Python identifiers.
   (Marnanel Thurman)

 * cli: add basic branch management commands (James Addison, #1514)

 * Fix wheels workflow. (Jelmer Vernooĳ)

 * ``Config.set`` replaces values by default, ``Config.add``
   appends them. (Jelmer Vernooĳ, #1545)

 * Support ``core.sshCommand`` setting.
   (Jelmer Vernooĳ, #1548)

 * Bump PyO3 to 0.25. (Jelmer Vernooĳ)

 * In ``SubprocessClient`` time out after 60 seconds
   when the subprocess hasn't terminated when closing
   the channel. (Jelmer Vernooĳ)

 * Add type hint for ``dulwich.client.get_ssh_vendor``.
   (Jelmer Vernooĳ, #1471)

 * Add basic merge command. (Jelmer Vernooĳ)

 * Update working tree in pull. (Jelmer Vernooĳ, #452)

 * Support switching branch in a way that updates
   working tree. (Jelmer Vernooĳ, #576)

 * Fix typing for ``dulwich.client`` methods that take repositories.
   (Jelmer Vernooĳ, #1521)

 * Fix handling of casing of subsection names in config.
   (Jelmer Vernooĳ, #1183)

 * Update working tree in pull. (Jelmer Vernooĳ, #452)

 * Use ``dissolve`` to manage deprecations. (Jelmer Vernooĳ)

 * Handle trailing backslashes in config files appropriately.
   (Jelmer Vernooĳ, #1088)

 * Add basic support for reading git commit graphs.
   (Jelmer Vernooĳ, #1191)

 * Port remaining ``dulwich.cli`` commands from getopt to argparse.
   (Jelmer Vernooĳ)

 * Add basic support for reftables.
   (Jelmer Vernooĳ, #1366)

0.22.8	2025-03-02

 * Allow passing in plain strings to ``dulwich.porcelain.tag_create``
   (Jelmer Vernooĳ, #1499)

 * Bump PyO3 to 0.23.5. (Jelmer Vernooĳ)

 * Add sparse checkout cone mode support (Louis Maddox, #1497)

 * Add skip-worktree support. (Louis Maddox)

 * Add "index.skipHash" option support. (Jan Rűegg)

 * Repo docstring improvements. (Marnanel Thurman)

0.22.7	2024-12-19

 * Fix serializing of commits with empty commit messages.
   (Castedo Ellerman, #1429)

0.22.6	2024-11-16

 * ``ObjectStore.iter_prefix``: fix handling of missing
   loose object directories. (Jelmer Vernooĳ)

 * Reject invalid refcontainer values (not 40 characters or symref).
   (Arun Babu Neelicattu)

 * Add type hints to various functions. (Castedo Ellerman)

0.22.5	2024-11-07

 * Drop support for Python 3.8. (Jelmer Vernooĳ)

 * Fix refspec handling in porcelain.pull. (Jelmer Vernooĳ)

 * Drop broken refspec support in porcelain.clone.
   (Jelmer Vernooĳ)

 * Provide ``ref_prefix`` functionality client-side
   if the server does not support it. (Jelmer Vernooĳ)

 * Consistently honor ``ref_prefix`` and ``protocol_version``
   arguments in client. (Jelmer Vernooĳ)

 * Strip pkt-line when negotiating protocol v2. Fixes
   compatibility with gerrit. (Rémy Pecqueur, #1423)

 * Don't pull in ``setuptools_rust`` when building pure
   package. (Eli Schwartz)

 * Return peeled refs from ``GitClient.get_refs`` if protocol-v2
   is used. (Stefan Sperling, #1410)

 * Drop outdated performance file. (Jelmer Vernooĳ, #1411)


0.22.4	2024-11-01

 * Fix handling of symrefs with protocol v2.
   (Jelmer Vernooĳ, #1389)

 * Add ``ObjectStore.iter_prefix``.  (Jelmer Vernooĳ)

 * Revert back to version 3 of ``Cargo.lock``, to allow
   building with older Cargo versions.
   (Jelmer Vernooĳ)

 * Use a default ref-prefix when fetching with git protocol v2
   (Stefan Sperling, #1389)

 * Add `ObjectStore.iter_prefix`. (Jelmer Vernooĳ)

0.22.3	2024-10-15

 * Improve wheel building in CI, so we can upload wheels for the next release.
   (Jelmer Vernooĳ)

0.22.2	2024-10-09

 * Ship ``Cargo.lock``. (Jelmer Vernooĳ, #1287)

 * Ship ``tests/`` and ``testdata/`` in sdist. (Jelmer Vernooĳ, #1292)

 * Add initial integration with OSS-Fuzz for continuous fuzz testing and first fuzzing test (David Lakin, #1302)

 * Drop Python 3.7 support. (Jelmer Vernooĳ)

 * Improve fuzzing coverage (David Lakin)

 * Support Python 3.13. (Edgar Ramírez-Mondragón, #1352)

 * Initial support for smart protocol v2. (Stefan Sperling)

0.22.1	2024-04-23

 * Handle alternate case for worktreeconfig setting (Will Shanks, #1285)

 * Ship rust files. (Jelmer Vernooĳ, #1287)

0.22.0	2024-04-22

 * Stop installing docs/ as part of package code. (Jelmer Vernooĳ, #1248)

 * Move tests to root. (Jelmer Vernooĳ, #1024)

 * Convert the optional C implementations to Rust.
   (Jelmer Vernooĳ)

0.21.7	2023-12-05
 * Fix NameError when encountering errors during HTTP operation.
   (Jelmer Vernooĳ, #1208)

 * Raise exception when default identity can't be found.
   (Jelmer Vernooĳ)

 * Add a dedicated exception class for unresolved
   deltas. (Jelmer Vernooĳ, #1221)

 * Support credentials in proxy URL. (Jelmer Vernooĳ, #1227)

 * Add ``dulwich.porcelain.for_each_ref``. (Daniele Trifirò)

0.21.6	2023-09-02

 * Convert _objects.c to rust.
   (Jelmer Vernooĳ)

 * index: Handle different stages of conflicted paths.
   (Kevin Hendricks, Jelmer Vernooĳ)

 * Improve LCA finding performance. (Kevin Hendricks)

 * client: Handle Content-Type with encoding set.
   (Antoine Lambert)

 * Only import _hashlib for type checking.
   (David Hotham)

 * Update docs regarding building dulwich without c bindings (#103)
   (Adam Plaice)

 * objects: Define a stricter return type for _parse_message
   (Vincent Lorentz)

 * Raise GitProtocolError when encountering HTTP Errors in
   HTTPGitClient. (Jelmer Vernooĳ, #1199)

0.21.5	2023-05-04

 * Be more tolerant to non-3-length tuple versions.
   (Jelmer Vernooĳ)

0.21.4.1	2023-05-04

 * Support ``core.symlinks=false``. (Jelmer Vernooĳ, #1169)

 * Deprecate ``dulwich.objects.parse_commit``.

 * Fix fetching into MemoryRepo. (Jelmer Vernooĳ, #1157)

 * Support ``init.defaultBranch`` config.
   (Jelmer Vernooĳ)

 * Fix ``ObjectStore.iterobjects_subset()`` when
   hex shas are passed for objects that live in packs.
   (Jelmer Vernooĳ, #1166)

 * client: Handle absolute path as redirect location in HTTP client.
   (Antoine Lambert)

0.21.3	2023-02-17

 * Add support for ``worktreeconfig`` extension.
   (Jelmer Vernooĳ)

 * Deprecate ``Commit.extra``; the Git project specifically
   discourages adding custom lines, and the contents of
   ``Commit.extra`` are unpredictable as contents
   may be different between different versions of Dulwich
   with support for different headers.

   ``Commit._extra`` still exists.
   (Jelmer Vernooĳ)

0.21.2	2023-01-18

 * Fix early file close bug in ``dulwich.pack.extend_pack``.
   (Jelmer Vernooĳ)

0.21.1	2023-01-17

 * Factor out ``dulwich.pack.extend_pack``.
   (Jelmer Vernooĳ)

0.21.0	2023-01-16

 * Pack internals have been significantly refactored, including
   significant low-level API changes.

   As a consequence of this, Dulwich now reuses pack deltas
   when communicating with remote servers, which brings a
   big boost to network performance.
   (Jelmer Vernooĳ)

 * Add 'pack-refs' command.
   (Dan Villiom Podlaski Christiansen)

 * Handle more errors when trying to read a ref
   (Dan Villiom Podlaski Christiansen)

 * Allow for reuse of existing deltas while creating pack files
   (Stefan Sperling)

 * cli: fix argument parsing for pack-objects --stdout
   (Stefan Sperling)

 * cli: open pack-objects output files in binary mode to avoid write() error
   (Stefan Sperling)

 * Bump minimum python version to 3.7. (Jelmer Vernooĳ)

 * honor no_proxy environment variable (#1098, afaul)

 * In HTTP Git Client, allow missing Content-Type.
   (Jelmer Vernooĳ)

 * Fix --pure builds (Jelmer Vernooĳ, #1093)

 * Allow passing abbrev to describe (#1084, Seppo Yli-Olli)

0.20.50	2022-10-30

 * Add --deltify option to ``dulwich pack-objects`` which enables
   deltification, and add initial support for reusing suitable
   deltas found in an existing pack file.
   (Stefan Sperling)

 * Fix Repo.reset_index.
   Previously, it instead took the union with the given tree.
   (Christian Sattler, #1072)

 * Add -b argument to ``dulwich clone``.
   (Jelmer Vernooĳ)

 * On Windows, provide a hint about developer mode
   when creating symlinks fails due to a permission
   error. (Jelmer Vernooĳ, #1005)

 * Add new ``ObjectID`` type in ``dulwich.objects``,
   currently just an alias for ``bytes``.
   (Jelmer Vernooĳ)

 * Support repository format version 1.
   (Jelmer Vernooĳ, #1056)

 * Support \r\n line endings with continuations when parsing
   configuration files.  (Jelmer Vernooĳ)

 * Fix handling of SymrefLoop in RefsContainer.__setitem__.
   (Dominic Davis-Foster, Jelmer Vernooĳ)

0.20.46	2022-09-06

 * Apply insteadOf to rsync-style location strings
   (previously it was just applied to URLs).
   (Jelmer Vernooĳ, python-poetry/poetry#6329)

 * Drop use of certifi, instead relying on urllib3's default
   code to find system CAs. (Jelmer Vernooĳ, #1025)

 * Implement timezone parsing in porcelain.
   (springheeledjack0, #1026)

 * Drop support for running without setuptools.
   (Jelmer Vernooĳ)

 * Ensure configuration is loaded when
   running "dulwich clone".
   (Jelmer Vernooĳ)

 * Build 32 bit wheels for Windows.
   (Benjamin Parzella)

 * tests: Ignore errors when deleting GNUPGg
   home directory. Fixes spurious errors racing
   gnupg-agent. Thanks, Matěj Cepl. Fixes #1000

 * config: Support closing brackets in quotes in section
   names. (Jelmer Vernooĳ, #10124)

 * Various and formatting fixes. (Kian-Meng Ang)

 * Document basic authentication in dulwich.porcelain.clone.
   (TuringTux)

 * Flush before calling fsync, ensuring buffers
   are filled. (wernha)

 * Support GPG commit signing. (springheeledjack0)

 * Add python 3.11 support. (Saugat Pachhai)

 * Allow missing GPG during tests. (Jakub Kulík)

 * status: return posix-style untracked paths instead of nt-style paths on
   win32 (Daniele Trifirò)

 * Honour PATH environment when running C Git for testing.
   (Stefan Sperling)

 * Split out exception for symbolic reference loops.
   (Jelmer Vernooĳ)

 * Move various long-deprecated methods.
   (Jelmer Vernooĳ)


0.20.45	2022-07-15

 * Add basic ``dulwich.porcelain.submodule_list`` and ``dulwich.porcelain.submodule_add``
  (Jelmer Vernooĳ)

0.20.44	2022-06-30

 * Fix reading of chunks in server. (Jelmer Vernooĳ, #977)

 * Support applying of URL rewriting using ``insteadOf`` / ``pushInsteadOf``.
   (Jelmer Vernooĳ, #706)

0.20.43	2022-06-07

 * Lazily import url2pathname.
   (Jelmer Vernooĳ)

 * Drop caching of full HTTP response. Attempt #2.
   (jelmer Vernooĳ, Antoine Lambert, #966)

0.20.42	2022-05-24

 * Drop ``RefsContainer.watch`` that was always flaky.
   (Jelmer Vernooĳ, #886)

0.20.41	2022-05-24

 * Fix wheel uploading, properly. (Ruslan Kuprieiev)

0.20.40	2022-05-19

 * Fix wheel uploading. (Daniele Trifirò, Jelmer Vernooĳ)

0.20.39	2022-05-19

0.20.38	2022-05-17

 * Disable paramiko tests if paramiko is not available. (Michał Górny)

 * Set flag to re-enable paramiko server side on gentoo for running paramiko
   tests. (Michał Górny)

 * Increase tolerance when comparing time stamps; fixes some
   spurious test failures on slow CI systems. (Jelmer Vernooĳ)

 * Revert removal of caching of full HTTP response. This breaks
   access to some HTTP servers.
   (Jelmer Vernooĳ)

0.20.37	2022-05-16

 * Avoid making an extra copy when fetching pack files.
   (Jelmer Vernooĳ)

 * Add ``porcelain.remote_remove``.
   (Jelmer Vernooĳ, #923)

0.20.36	2022-05-15

 * Add ``walk_untracked`` argument to ``porcelain.status``.
   (Daniele Trifirò)

 * Add tests for paramiko SSH Vendor.
   (Filipp Frizzy)

0.20.35	2022-03-20

 * Document the ``path`` attribute for ``Repo``.
   (Jelmer Vernooĳ, #854)

0.20.34	2022-03-14

 * Add support for multivars in configuration.
   (Jelmer Vernooĳ, #718)

0.20.33	2022-03-05

 * Fix handling of escaped characters in ignore patterns.
   (Jelmer Vernooĳ, #930)

 * Add ``dulwich.contrib.requests_vendor``. (epopcon)

 * Ensure git config is available in a linked working tree.
   (Jesse Cureton, #926)

0.20.32	2022-01-24

 * Properly close result repository during test.
   (Jelmer Vernooĳ, #928)

0.20.31	2022-01-21

 * Add GitClient.clone(). (Jelmer Vernooĳ, #920)

0.20.30	2022-01-08

0.20.29	2022-01-08

 * Support staging submodules.
   (Jelmer Vernooĳ)

 * Drop deprecated Index.iterblobs and iter_fresh_blobs.
   (Jelmer Vernooĳ)

 * Unify clone behaviour of ``Repo.clone`` and
   ``porcelain.clone``, and add branch parameter for
   clone. (Peter Rowlands, #851)

0.20.28	2022-01-05

 * Fix hook test on Mac OSX / Linux when dulwich is
   not installed system-wide. (Jelmer Vernooĳ, #919)

 * Cope with gecos being unset.
   (Jelmer Vernooĳ, #917)

0.20.27	2022-01-04

 * Allow adding files to repository in pre-commit hook.
   (Jelmer Vernooĳ, #916)

 * Raise SubmoduleEncountered in ``tree_lookup_path``.
   (Jelmer Vernooĳ)

0.20.26	2021-10-29

 * Support os.PathLike arguments to Repo.stage().
   (Jan Wiśniewski, #907)

 * Drop support for Python 3.5.  (Jelmer Vernooĳ)

 * Add ``dulwich.porcelain._reset_file``.
   (Ded_Secer)

 * Add ``Repo.unstage``. (Ded_Secer)

0.20.25	2021-08-23

 * Fix ``dulwich`` script when installed via setup.py.
   (Dan Villiom Podlaski Christiansen)

 * Make default file mask consistent
   with Git. (Dan Villiom Podlaski Christiansen, #884)

0.20.24	2021-07-18

 * config: disregard UTF-8 BOM when reading file.
   (Dan Villiom Podlaski Christiansen)

 * Skip lines with spaces only in .gitignore. (Andrey Torsunov, #878)

 * Add a separate HTTPProxyUnauthorized exception for 407 errors.
   (Jelmer Vernooĳ, #822)

 * Split out a AbstractHTTPGitClient class.
   (Jelmer Vernooĳ)

0.20.23	2021-05-24

 * Fix installation of GPG during package publishing.
   (Ruslan Kuprieiev)

0.20.22	2021-05-24

 * Prevent removal of refs directory when the last ref is
   deleted. (Jelmer Vernooĳ)

 * Fix filename: MERGE_HEADS => MERGE_HEAD.
   (Jelmer Vernooĳ, #861)

 * For ignored directories, porcelain.add and porcelain.status now only return
   the path to directory itself in the list of ignored paths. Previously, paths
   for all files within the directory would also be included in the list.
   (Peter Rowlands, #853)

 * Provide depth argument to ``determine_wants``.
   (Peter Rowlands)

 * Various tag signature handling improvements.
   (Daniel Murphy)

 * Add separate Tag.verify().  (Peter Rowlands)

 * Add support for version 3 index files. (Jelmer Vernooĳ)

 * Fix autocrlf=input handling. (Peter Rowlands, Boris Feld)

 * Attempt to find C Git global config on Windows.
   (Peter Rowlands)

 API CHANGES

 * The APIs for writing and reading individual index entries have changed
   to handle lists of (name, entry) tuples rather than tuples.

0.20.21	2021-03-20

 * Add basic support for a GcsObjectStore that stores
   pack files in gcs. (Jelmer Vernooĳ)

 * In porcelain.push, default to local active branch.
   (Jelmer Vernooĳ, #846)

 * Support fetching symrefs.
   (Jelmer Vernooĳ, #485, #847)

 * Add aarch64 wheel building.
   (odidev, Jelmer Vernooij)

0.20.20	2021-03-03

 * Implement ``Stash.drop``. (Peter Rowlands)

 * Support untracked symlinks to paths outside the
   repository. (Peter Rowlands, #842)

0.20.19	2021-02-11

 * Fix handling of negative matches in nested gitignores.
   (Corentin Hembise, #836)

0.20.18	2021-02-04

 * Fix formatting in setup.py. (Jelmer Vernooĳ)

 * Add release configuration. (Jelmer Vernooĳ)

0.20.17	2021-02-04

 * credentials: ignore end-of-line character. (Georges Racinet)

 * Fix failure in get_untracked_paths when the repository contains symlinks.
   (#830, #793, mattseddon)

 * docs: Clarify that Git objects are created on `git add`.
   (Utku Gultopu)

0.20.16	2021-01-16

 * Add flag to only attempt to fetch ignored untracked files when specifically requested.
   (Matt Seddon)

0.20.15	2020-12-23

 * Add some functions for parsing and writing bundles.
   (Jelmer Vernooĳ)

 * Add ``no_verify`` flag to ``porcelain.commit`` and ``Repo.do_commit``.
   (Peter Rowlands)

 * Remove dependency on external mock module.
   (Matěj Cepl, #820)

0.20.14	2020-11-26

 * Fix some stash functions on Python 3. (Peter Rowlands)

 * Fix handling of relative paths in alternates files on Python 3.
   (Georges Racinet)

0.20.13	2020-11-22

 * Add py.typed to allow type checking. (David Caro)

 * Add tests demonstrating a bug in the walker code.
   (Doug Hellman)

0.20.11	2020-10-30

 * Fix wheels build on Linux. (Ruslan Kuprieiev)

 * Enable wheels build for Python 3.9 on Linux. (Jelmer Vernooĳ)

0.20.8	2020-10-29

 * Build wheels on Mac OS X / Windows for Python 3.9.
   (Jelmer Vernooij)

0.20.7	2020-10-29

 * Check core.repositoryformatversion. (Jelmer Vernooĳ, #803)

 * Fix ACK/NACK handling in archive command handling in dulwich.client.
   (DzmitrySudnik, #805)

0.20.6	2020-08-29

 * Add a ``RefsContainer.watch`` interface.
   (Jelmer Vernooĳ, #751)

 * Fix pushing of new branches from porcelain.push.
   (Jelmer Vernooĳ, #788)

 * Honor shallows when pushing from a shallow clone.
   (Jelmer Vernooĳ, #794)

 * Fix porcelain.path_to_tree_path for Python 3.5.
   (Boris Feld, #777)

 * Add support for honor proxy environment variables for HTTP.
   (Aurélien Campéas, #797)

0.20.5	2020-06-22

 * Print a clearer exception when setup.py is executed on Python < 3.5.
   (Jelmer Vernooĳ, #783)

 * Send an empty pack to clients if they requested objects, even if they
   already have those objects. Thanks to Martijn Pieters for
   the detailed bug report. (Jelmer Vernooĳ, #781)

 * porcelain.pull: Don't ask for objects that we already have.
   (Jelmer Vernooĳ, #782)

 * Add LCA implementation. (Kevin Hendricks)

 * Add functionality for finding the merge base. (Kevin Hendricks)

 * Check for diverged branches during push.
   (Jelmer Vernooĳ, #494)

 * Check for fast-forward during pull. (Jelmer Vernooĳ, #666)

 * Return a SendPackResult object from
   GitClient.send_pack(). (Jelmer Vernooĳ)

 * ``GitClient.send_pack`` now sets the ``ref_status`` attribute
   on its return value to a dictionary mapping ref names
   to error messages. Previously, it raised UpdateRefsError
   if any of the refs failed to update.
   (Jelmer Vernooĳ, #780)

 * Add a ``porcelain.Error`` object that most errors in porcelain
   derive from. (Jelmer Vernooĳ)

 * Fix argument parsing in dulwich command-line app.
   (Jelmer Vernooĳ, #784)

0.20.3	2020-06-14

 * Add support for remembering remote refs after push/pull.
   (Jelmer Vernooĳ, #752)

 * Support passing tree and output encoding to
   dulwich.patch.unified_diff. (Jelmer Vernooĳ, #763)

 * Fix pushing of new refs over HTTP(S) when there are
   no new objects to be sent.
   (Jelmer Vernooĳ, #739)

 * Raise new error HTTPUnauthorized when the server sends
   back a 401. The client can then retry with credentials.
   (Jelmer Vernooĳ, #691)

 * Move the guts of bin/dulwich to dulwich.cli, so it is easier to
   test or import. (Jelmer Vernooĳ)

 * Install dulwich script from entry_points when setuptools is available,
   making it slightly easier to use on Windows. (Jelmer Vernooĳ, #540)

 * Set python_requires>=3.5 in setup.py. (Manuel Jacob)

0.20.2	2020-06-01

 * Brown bag release to fix uploads of Windows wheels.

0.20.1	2020-06-01

 * Publish binary wheels for: Windows, Linux, Mac OS X.
   (Jelmer Vernooĳ, #711, #710, #629)

0.20.0	2020-06-01

 * Drop support for Python 2. (Jelmer Vernooĳ)

 * Only return files from the loose store that look like git objects.
   (Nicolas Dandrimont)

 * Ignore agent= capability if sent by client.
   (Jelmer Vernooĳ)

 * Don't break when encountering block devices.
   (Jelmer Vernooĳ)

 * Decode URL paths in HttpGitClient using utf-8 rather than file system
   encoding. (Manuel Jacob)

 * Fix pushing from a shallow clone.
   (Brecht Machiels, #705)

0.19.16	2020-04-17

 * Don't send "deepen None" to server if graph walker
   supports shallow. (Jelmer Vernooĳ, #747)

 * Support tweaking the compression level for
   loose objects through the "core.looseCompression" and
   "core.compression" settings. (Jelmer Vernooĳ)

 * Support tweaking the compression level for
   pack objects through the "core.packCompression" and
   "core.compression" settings. (Jelmer Vernooĳ)

 * Add a "dulwich.contrib.diffstat" module.
   (Kevin Hendricks)

0.19.15	2020-01-26

 * Properly handle files that are just executable for the
   current user. (Jelmer Vernooĳ, #734)

 * Fix handling of stored encoding in
   ``dulwich.porcelain.get_object_by_path`` on Python 3.
   (Jelmer Vernooĳ)

 * Support the include_trees and rename_detector arguments
   at the same time when diffing trees.
   (Jelmer Vernooĳ)

0.19.14	2019-11-30

 * Strip superfluous <> around email. (monnerat)

 * Stop checking for ref validity client-side. Users can
   still call check_wants manually. (Jelmer Vernooĳ)

 * Switch over to Google-style docstrings.
   (Jelmer Vernooĳ)

 * Add a ``dulwich.porcelain.active_branch`` function.
   (Jelmer Vernooĳ)

 * Cleanup new directory if clone fails. (Jelmer Vernooĳ, #733)

 * Expand "~" in global exclude path. (Jelmer Vernooĳ)

0.19.13	2019-08-19

 BUG FIXES

 * Avoid ``PermissionError``, since it is Python3-specific.
   (Jelmer Vernooĳ)

 * Fix regression that added a dependency on C git for the
   test suite. (Jelmer Vernooĳ, #720)

 * Fix compatibility with Python 3.8 - mostly deprecation warnings.
   (Jelmer Vernooĳ)

0.19.12	2019-08-13

 BUG FIXES

 * Update directory detection for `get_unstaged_changes` for Python 3.
   (Boris Feld, #684)

 * Add a basic ``porcelain.clean``. (Lane Barlow, #398)

 * Fix output format of ``porcelain.diff`` to match that of
   C Git. (Boris Feld)

 * Return a 404 not found error when repository is not found.

 * Mark ``.git`` directories as hidden on Windows.
   (Martin Packman, #585)

 * Implement ``RefsContainer.__iter__``
   (Jelmer Vernooĳ, #717)

 * Don't trust modes if they can't be modified after a file has been created.
   (Jelmer Vernooĳ, #719)

0.19.11	2019-02-07

 IMPROVEMENTS

 * Use fullname from gecos field, if available.
   (Jelmer Vernooĳ)

 * Support ``GIT_AUTHOR_NAME`` / ``GIT_AUTHOR_EMAIL``.
   (Jelmer Vernooĳ)

 * Add support for short ids in parse_commit. (Jelmer Vernooĳ)

 * Add support for ``prune`` and ``prune_tags`` arguments
   to ``porcelain.fetch``. (Jelmer Vernooĳ, #681)

 BUG FIXES

  * Fix handling of race conditions when new packs appear.
    (Jelmer Vernooĳ)

0.19.10	2018-01-15

 IMPROVEMENTS

 * Add `dulwich.porcelain.write_tree`.
   (Jelmer Vernooĳ)

 * Support reading ``MERGE_HEADS`` in ``Repo.do_commit``.
   (Jelmer Vernooĳ)

 * Import from ``collections.abc`` rather than ``collections`` where
   applicable. Required for 3.8 compatibility.
   (Jelmer Vernooĳ)

 * Support plain strings as refspec arguments to
   ``dulwich.porcelain.push``. (Jelmer Vernooĳ)

 * Add support for creating signed tags.
   (Jelmer Vernooĳ, #542)

 BUG FIXES

 *  Handle invalid ref that pretends to be a sub-folder under a valid ref.
    (KS Chan)

0.19.9	2018-11-17

 BUG FIXES

 * Avoid fetching ghosts in ``Repo.fetch``.
   (Jelmer Vernooĳ)

 * Preserve port and username in parsed HTTP URLs.
   (Jelmer Vernooĳ)

 * Add basic server side implementation of ``git-upload-archive``.
   (Jelmer Vernooĳ)

0.19.8	2018-11-06

 * Fix encoding when reading README file in setup.py.
   (egor <egor@sourced.tech>, #668)

0.19.7	2018-11-05

 CHANGES

  * Drop support for Python 3 < 3.4. This is because
    pkg_resources (which get used by setuptools and mock)
    no longer supports 3.3 and earlier. (Jelmer Vernooĳ)

 IMPROVEMENTS

  * Support ``depth`` argument to ``GitClient.fetch_pack`` and support
    fetching and updating shallow metadata. (Jelmer Vernooĳ, #240)

 BUG FIXES

  * Don't write to stdout and stderr when they are not available
    (such as is the case for pythonw). (Sylvia van Os, #652)

  * Fix compatibility with newer versions of git, which expect CONTENT_LENGTH
    to be set to 0 for empty body requests. (Jelmer Vernooĳ, #657)

  * Raise an exception client-side when a caller tries to request
    SHAs that are not directly referenced the servers' refs.
    (Jelmer Vernooĳ)

  * Raise more informative errors when unable to connect to repository
    over SSH or subprocess. (Jelmer Vernooĳ)

  * Handle commit identity fields with multiple ">" characters.
    (Nicolas Dandrimont)

 IMPROVEMENTS

  * ``dulwich.porcelain.get_object_by_path`` method for easily
    accessing a path in another tree. (Jelmer Vernooĳ)

  * Support the ``i18n.commitEncoding`` setting in config.
    (Jelmer Vernooĳ)

0.19.6	2018-08-11

 BUG FIXES

  * Fix support for custom transport arguments in ``dulwich.porcelain.clone``.
    (Semyon Slepov)

  * Fix compatibility with Python 3.8 (Jelmer Vernooĳ, Daniel M. Capella)

  * Fix some corner cases in ``path_to_tree_path``. (Romain Keramitas)

  * Support paths as bytestrings in various places in ``dulwich.index``
    (Jelmer Vernooĳ)

  * Avoid setup.cfg for now, since it seems to break pypi metadata.
    (Jelmer Vernooĳ, #658)

0.19.5	2018-07-08

 IMPROVEMENTS

  * Add ``porcelain.describe``. (Sylvia van Os)

 BUG FIXES

  * Fix regression in ``dulwich.porcelain.clone`` that prevented cloning
    of remote repositories. (Jelmer Vernooĳ, #639)

  * Don't leave around empty parent directories for removed refs.
    (Damien Tournoud, #640)

0.19.4	2018-06-24

 IMPROVEMENTS

  * Add ``porcelain.ls_files``. (Jelmer Vernooĳ)

  * Add ``Index.items``. (Jelmer Vernooĳ)

 BUG FIXES

  * Avoid unicode characters (e.g. the digraph ĳ in my surname) in setup.cfg,
    since setuptools doesn't deal well with them. See
    https://github.com/pypa/setuptools/issues/1062. (Jelmer Vernooĳ, #637)

0.19.3	2018-06-17

 IMPROVEMENTS

  * Add really basic `dulwich.porcelain.fsck` implementation.
    (Jelmer Vernooĳ)

  * When the `DULWICH_PDB` environment variable is set, make
    SIGQUIT open pdb in the 'dulwich' command.

  * Add `checkout` argument to `Repo.clone`.
    (Jelmer Vernooĳ, #503)

  * Add `Repo.get_shallow` method. (Jelmer Vernooĳ)

  * Add basic `dulwich.stash` module. (Jelmer Vernooĳ)

  * Support a `prefix` argument to `dulwich.archive.tar_stream`.
    (Jelmer Vernooĳ)

 BUG FIXES

  * Fix handling of encoding for tags. (Jelmer Vernooĳ, #608)

  * Fix tutorial tests on Python 3. (Jelmer Vernooĳ, #573)

  * Fix remote refs created by `porcelain.fetch`. (Daniel Andersson, #623)

  * More robust pack creation on Windows. (Daniel Andersson)

  * Fix recursive option for `porcelain.ls_tree`. (Romain Keramitas)

 TESTS

  * Some improvements to paramiko tests. (Filipp Frizzy)

0.19.2	2018-04-07

 BUG FIXES

  * Fix deprecated Index.iterblobs method.
    (Jelmer Vernooĳ)

0.19.1	2018-04-05

 IMPROVEMENTS

  * Add 'dulwich.mailmap' file for reading mailmap files.
    (Jelmer Vernooĳ)

  * Dulwich no longer depends on urllib3[secure]. Instead,
    "dulwich[https]" can be used to pull in the necessary
    dependencies for HTTPS support. (Jelmer Vernooĳ, #616)

  * Support the `http.sslVerify` and `http.sslCAInfo`
    configuration options. (Jelmer Vernooĳ)

  * Factor out `dulwich.client.parse_rsync_url` function.
    (Jelmer Vernooĳ)

  * Fix repeat HTTP requests using the same smart HTTP client.
    (Jelmer Vernooĳ)

  * New 'client.PLinkSSHVendor' for creating connections using PuTTY's plink.exe.
    (Adam Bradley, Filipp Frizzy)

  * Only pass in `key_filename` and `password` to SSHVendor
    implementations if those parameters are set.
    (This helps with older SSHVendor implementations)
    (Jelmer Vernooĳ)

 API CHANGES

  * Index.iterblobs has been renamed to Index.iterobjects.
    (Jelmer Vernooĳ)

0.19.0	2018-03-10

 BUG FIXES

  * Make `dulwich.archive` set the gzip header file modification time so that
    archives created from the same Git tree are always identical.
    (#577, Jonas Haag)

  * Allow comment characters (#, ;) within configuration file strings
    (Daniel Andersson, #579)

  * Raise exception when passing in invalid author/committer values
    to Repo.do_commit(). (Jelmer Vernooĳ, #602)

 IMPROVEMENTS

  * Add a fastimport ``extra``. (Jelmer Vernooĳ)

  * Start writing reflog entries. (Jelmer Vernooĳ)

  * Add ability to use password and keyfile ssh options with SSHVendor. (Filipp Kucheryavy)

  * Add ``change_type_same`` flag to ``tree_changes``.
    (Jelmer Vernooĳ)

 API CHANGES

  * ``GitClient.send_pack`` now accepts a ``generate_pack_data``
    rather than a ``generate_pack_contents`` function for
    performance reasons. (Jelmer Vernooĳ)

  * Dulwich now uses urllib3 internally for HTTP requests.
    The `opener` argument to `dulwich.client.HttpGitClient` that took a
    `urllib2` opener instance has been replaced by a `pool_manager` argument
    that takes a `urllib3` pool manager instance.
    (Daniel Andersson)

0.18.6	2017-11-11

 BUG FIXES

  * Fix handling of empty repositories in ``porcelain.clone``.
    (#570, Jelmer Vernooĳ)

  * Raise an error when attempting to add paths that are not under the
    repository. (Jelmer Vernooĳ)

  * Fix error message for missing trailing ]. (Daniel Andersson)

  * Raise EmptyFileException when corruption (in the form of an empty
    file) is detected. (Antoine R. Dumont, #582)

  IMPROVEMENTS

  * Enforce date field parsing consistency. This also add checks on
    those date fields for potential overflow.
    (Antoine R. Dumont, #567)

0.18.5	2017-10-29

 BUG FIXES

  * Fix cwd for hooks. (Fabian Grünbichler)

  * Fix setting of origin in config when non-standard origin is passed into
    ``Repo.clone``. (Kenneth Lareau, #565)

  * Prevent setting SSH arguments from SSH URLs when using SSH through a
    subprocess. Note that Dulwich doesn't support cloning submodules.
    (CVE-2017-16228) (Jelmer Vernooĳ)

 IMPROVEMENTS

  * Silently ignored directories in ``Repo.stage``.
    (Jelmer Vernooĳ, #564)

 API CHANGES

  * GitFile now raises ``FileLocked`` when encountering a lock
    rather than OSError(EEXIST). (Jelmer Vernooĳ)

0.18.4	2017-10-01

 BUG FIXES

  * Make default User-Agent start with "git/" because GitHub won't response to
    HTTP smart server requests otherwise (and reply with a 404).
    (Jelmer vernooĳ, #562)

0.18.3	2017-09-03

 BUG FIXES

  * Read config during porcelain operations that involve remotes.
    (Jelmer Vernooĳ, #545)

  * Fix headers of empty chunks in unified diffs. (Taras Postument, #543)

  * Properly follow redirects over HTTP. (Jelmer Vernooĳ, #117)

 IMPROVEMENTS

  * Add ``dulwich.porcelain.update_head``. (Jelmer Vernooĳ, #439)

  * ``GitClient.fetch_pack`` now returns symrefs.
    (Jelmer Vernooĳ, #485)

  * The server now supports providing symrefs.
    (Jelmer Vernooĳ, #485)

  * Add ``dulwich.object_store.commit_tree_changes`` to incrementally
    commit changes to a tree structure. (Jelmer Vernooĳ)

  * Add basic ``PackBasedObjectStore.repack`` method.
    (Jelmer Vernooĳ, Earl Chew, #296, #549, #552)

0.18.2	2017-08-01

 TEST FIXES

  * Use constant timestamp so tests pass in all timezones, not just BST.
    (Jelmer Vernooĳ)

0.18.1	2017-07-31

 BUG FIXES

  * Fix syntax error in dulwich.contrib.test_swift_smoke.
    (Jelmer Vernooĳ)

0.18.0	2017-07-31

 BUG FIXES

  * Fix remaining tests on Windows. (Jelmer Vernooĳ, #493)

  * Fix build of C extensions with Python 3 on Windows.
    (Jelmer Vernooĳ)

  * Pass 'mkdir' argument onto Repo.init_bare in Repo.clone.
    (Jelmer Vernooĳ, #504)

  * In ``dulwich.porcelain.add``, if no files are specified,
    add from current working directory rather than repository root.
    (Jelmer Vernooĳ, #521)

  * Properly deal with submodules in 'porcelain.status'.
    (Jelmer Vernooĳ, #517)

  * ``dulwich.porcelain.remove`` now actually removes files from
    disk, not just from the index. (Jelmer Vernooĳ, #488)

  * Fix handling of "reset" command with markers and without
    "from". (Antoine Pietri)

  * Fix handling of "merge" command with markers. (Antoine Pietri)

  * Support treeish argument to porcelain.reset(), rather than
    requiring a ref/commit id. (Jelmer Vernooĳ)

  * Handle race condition when mtime doesn't change between writes/reads.
    (Jelmer Vernooĳ, #541)

  * Fix ``dulwich.porcelain.show`` on commits with Python 3.
    (Jelmer Vernooĳ, #532)

 IMPROVEMENTS

  * Add basic support for reading ignore files in ``dulwich.ignore``.
    ``dulwich.porcelain.add`` and ``dulwich.porcelain.status`` now honor
    ignores. (Jelmer Vernooĳ, Segev Finer, #524, #526)

  * New ``dulwich.porcelain.check_ignore`` command.
    (Jelmer Vernooĳ)

  * ``dulwich.porcelain.status`` now supports a ``ignored`` argument.
    (Jelmer Vernooĳ)

 DOCUMENTATION

  * Clarified docstrings for Client.{send_pack,fetch_pack} implementations.
    (Jelmer Vernooĳ, #523)

0.17.3	2017-03-20

 PLATFORM SUPPORT

  * List Python 3.3 as supported. (Jelmer Vernooĳ, #513)

 BUG FIXES

  * Fix compatibility with pypy 3. (Jelmer Vernooĳ)

0.17.2	2017-03-19

 BUG FIXES

  * Add workaround for
    https://bitbucket.org/pypy/pypy/issues/2499/cpyext-pystring_asstring-doesnt-work,
    fixing Dulwich when used with C extensions on pypy < 5.6. (Victor Stinner)

  * Properly quote config values with a '#' character in them.
    (Jelmer Vernooij, #511)

0.17.1	2017-03-01

 IMPROVEMENTS

  * Add basic 'dulwich pull' command. (Jelmer Vernooĳ)

 BUG FIXES

  * Cope with existing submodules during pull.
    (Jelmer Vernooĳ, #505)

0.17.0	2017-03-01

 TEST FIXES

  * Skip test that requires sync to synchronize filesystems if os.sync is
    not available. (Koen Martens)

 IMPROVEMENTS

  * Implement MemoryRepo.{set_description,get_description}.
    (Jelmer Vernooĳ)

  * Raise exception in Repo.stage() when absolute paths are
    passed in. Allow passing in relative paths to
    porcelain.add().(Jelmer Vernooij)

 BUG FIXES

  * Handle multi-line quoted values in config files.
    (Jelmer Vernooĳ, #495)

  * Allow porcelain.clone of repository without HEAD.
    (Jelmer Vernooĳ, #501)

  * Support passing tag ids to Walker()'s include argument.
    (Jelmer Vernooĳ)

  * Don't strip trailing newlines from extra headers.
    (Nicolas Dandrimont)

  * Set bufsize=0 for subprocess interaction with SSH client.
    Fixes hangs on Python 3. (René Stern, #434)

  * Don't drop first slash for SSH paths, except for those
    starting with "~". (Jelmer Vernooij, René Stern, #463)

  * Properly log off after retrieving just refs.
    (Jelmer Vernooij)

0.16.3	2016-01-14

 TEST FIXES

  * Remove racy check that relies on clock time changing between writes.
    (Jelmer Vernooij)

 IMPROVEMENTS

  * Add porcelain.remote_add. (Jelmer Vernooĳ)

0.16.2	2016-01-14

 IMPROVEMENTS

  * Fixed failing test-cases on windows.
    (Koen Martens)

 API CHANGES

  * Repo is now a context manager, so that it can be easily
    closed using a ``with`` statement. (Søren Løvborg)

 IMPROVEMENTS

  * Add naive annotate implementation in ``dulwich.annotate``.
    It works, but performance needs work. (Jelmer Vernooĳ)

 TEST FIXES

  * Only run worktree list compat tests against git 2.7.0,
    when 'git worktree list' was introduced. (Jelmer Vernooĳ)

 BUG FIXES

  * Ignore filemode when building index when core.filemode
    is false.
    (Koen Martens)

  * Initialize core.filemode configuration setting by
    probing the filesystem for trustable permissions.
    (Koen Martens)

  * Fix ``porcelain.reset`` to respect the committish argument.
    (Koen Martens)

  * Fix dulwich.porcelain.ls_remote() on Python 3.
    (#471, Jelmer Vernooĳ)

  * Allow both unicode and byte strings for host paths
    in dulwich.client. (#435, Jelmer Vernooĳ)

  * Add remote from porcelain.clone. (#466, Jelmer Vernooĳ)

  * Fix unquoting of credentials before passing to urllib2.
    (#475, Volodymyr Holovko)

  * Cope with submodules in `build_index_from_tree`.
    (#477, Jelmer Vernooĳ)

  * Handle deleted files in `get_unstaged_changes`.
    (#483, Doug Hellmann)

  * Don't overwrite files when they haven't changed in
    `build_file_from_blob`.
    (#479, Benoît HERVIER)

  * Check for existence of index file before opening pack.
    Fixes a race when new packs are being added.
    (#482, wme)

0.16.1	2016-12-25

 BUG FIXES

  * Fix python3 compatibility for dulwich.contrib.release_robot.
    (Jelmer Vernooĳ)

0.16.0	2016-12-24

 IMPROVEMENTS

  * Add support for worktrees. See `git-worktree(1)` and
    `gitrepository-layout(5)`. (Laurent Rineau)

  * Add support for `commondir` file in Git control
    directories. (Laurent Rineau)

  * Add support for passwords in HTTP URLs.
    (Jon Bain, Mika Mäenpää)

  * Add `release_robot` script to contrib,
    allowing easy finding of current version based on Git tags.
    (Mark Mikofski)

  * Add ``Blob.splitlines`` method.
    (Jelmer Vernooĳ)

 BUG FIXES

  * Fix handling of ``Commit.tree`` being set to an actual
    tree object rather than a tree id. (Jelmer Vernooij)

  * Return remote refs from LocalGitClient.fetch_pack(),
    consistent with the documentation for that method.
    (#461, Jelmer Vernooĳ)

  * Fix handling of unknown URL schemes in get_transport_and_path.
    (#465, Jelmer Vernooij)

0.15.0	2016-10-09

 BUG FIXES

  * Allow missing trailing LF when reading service name from
    HTTP servers. (Jelmer Vernooĳ, Andrew Shadura, #442)

  * Fix dulwich.porcelain.pull() on Python3. (Jelmer Vernooĳ, #451)

  * Properly pull in tags during dulwich.porcelain.clone.
    (Jelmer Vernooĳ, #408)

 CHANGES

  * Changed license from "GNU General Public License, version 2.0 or later"
    to "Apache License, version 2.0 or later or GNU General Public License,
    version 2.0 or later". (#153)

 IMPROVEMENTS

  * Add ``dulwich.porcelain.ls_tree`` implementation. (Jelmer Vernooĳ)

0.14.1	2016-07-05

 BUG FIXES

  * Fix regression removing untouched refs when pushing over SSH.
    (Jelmer Vernooĳ #441)

  * Skip Python3 tests for SWIFT contrib module, as it has not yet
    been ported.

0.14.0	2016-07-03

 BUG FIXES

  * Fix ShaFile.id after modification of a copied ShaFile.
    (Félix Mattrat, Jelmer Vernooĳ)

  * Support removing refs from porcelain.push.
    (Jelmer Vernooĳ, #437)

  * Stop magic protocol ref `capabilities^{}` from leaking out
    to clients. (Jelmer Vernooĳ, #254)

 IMPROVEMENTS

  * Add `dulwich.config.parse_submodules` function.

  * Add `RefsContainer.follow` method. (#438)

0.13.0	2016-04-24

 IMPROVEMENTS

  * Support `ssh://` URLs in get_transport_and_path_from_url().
    (Jelmer Vernooĳ, #402)

  * Support missing empty line after headers in Git commits and tags.
    (Nicolas Dandrimont, #413)

  * Fix `dulwich.porcelain.status` when used in empty trees.
    (Jelmer Vernooĳ, #415)

  * Return copies of objects in MemoryObjectStore rather than
    references, making the behaviour more consistent with that of
    DiskObjectStore. (Félix Mattrat, Jelmer Vernooĳ)

  * Fix ``dulwich.web`` on Python3. (#295, Jonas Haag)

 CHANGES

  * Drop support for Python 2.6.

  * Fix python3 client web support. (Jelmer Vernooĳ)

 BUG FIXES

  * Fix hang on Gzip decompression. (Jonas Haag)

  * Don't rely on working tell() and seek() methods
    on wsgi.input. (Jonas Haag)

  * Support fastexport/fastimport functionality on python3 with newer
    versions of fastimport (>= 0.9.5). (Jelmer Vernooĳ, Félix Mattrat)

0.12.0	2015-12-13

 IMPROVEMENTS

  * Add a `dulwich.archive` module that can create tarballs.
    Based on code from Jonas Haag in klaus.

  * Add a `dulwich.reflog` module for reading and writing reflogs.
    (Jelmer Vernooĳ)

  * Fix handling of ambiguous refs in `parse_ref` to make
    it match the behaviour described in https://git-scm.com/docs/gitrevisions.
    (Chris Bunney)

  * Support Python3 in C modules. (Lele Gaifax)

 BUG FIXES

  * Simplify handling of SSH command invocation.
    Fixes quoting of paths. Thanks, Thomas Liebetraut. (#384)

  * Fix inconsistent handling of trailing slashes for DictRefsContainer. (#383)

  * Add hack to support thin packs duing fetch(), albeit while requiring the
    entire pack file to be loaded into memory. (jsbain)

 CHANGES

  * This will be the last release to support Python 2.6.

0.11.2	2015-09-18

 IMPROVEMENTS

  * Add support for agent= capability. (Jelmer Vernooĳ, #298)

  * Add support for quiet capability. (Jelmer Vernooĳ)

 CHANGES

  * The ParamikoSSHVendor class has been moved to
  * dulwich.contrib.paramiko_vendor, as it's currently untested.
    (Jelmer Vernooĳ, #364)

0.11.1	2015-09-13

 Fix-up release to exclude broken blame.py file.

0.11.0	2015-09-13

 IMPROVEMENTS

  * Extended Python3 support to most of the codebase.
    (Gary van der Merwe, Jelmer Vernooĳ)
  * The `Repo` object has a new `close` method that can be called to close any
    open resources. (Gary van der Merwe)
  * Support 'git.bat' in SubprocessGitClient on Windows.
    (Stefan Zimmermann)
  * Advertise 'ofs-delta' capability in receive-pack server side
    capabilities. (Jelmer Vernooĳ)
  * Switched `default_local_git_client_cls` to `LocalGitClient`.
    (Gary van der Merwe)
  * Add `porcelain.ls_remote` and `GitClient.get_refs`.
    (Michael Edgar)
  * Add `Repo.discover` method. (B. M. Corser)
  * Add `dulwich.objectspec.parse_refspec`. (Jelmer Vernooĳ)
  * Add `porcelain.pack_objects` and `porcelain.repack`.
    (Jelmer Vernooĳ)

 BUG FIXES

  * Fix handling of 'done' in graph walker and implement the
    'no-done' capability. (Tommy Yu, #88)

  * Avoid recursion limit issues resolving deltas. (William Grant, #81)

  * Allow arguments in local client binary path overrides.
    (Jelmer Vernooĳ)

  * Fix handling of commands with arguments in paramiko SSH
    client. (Andreas Klöckner, Jelmer Vernooĳ, #363)

  * Fix parsing of quoted strings in configs. (Jelmer Vernooĳ, #305)

0.10.1  2015-03-25

 BUG FIXES

  * Return `ApplyDeltaError` when encountering delta errors
    in both C extensions and native delta application code.
    (Jelmer Vernooĳ, #259)

0.10.0	2015-03-22

 BUG FIXES

  * In dulwich.index.build_index_from_tree, by default
    refuse to create entries that start with .git/.
    (Jelmer Vernooĳ, CVE-2014-9706)

  * Fix running of testsuite when installed.
    (Jelmer Vernooĳ, #223)

  * Use a block cache in _find_content_rename_candidates(),
    improving performance. (Mike Williams)

  * Add support for ``core.protectNTFS`` setting.
    (Jelmer Vernooĳ)

  * Fix TypeError when fetching empty updates.
    (Hwee Miin Koh)

  * Resolve delta refs when pulling into a MemoryRepo.
    (Max Shawabkeh, #256)

  * Fix handling of tags of non-commits in missing object finder.
    (Augie Fackler, #211)

  * Explicitly disable mmap on plan9 where it doesn't work.
    (Jeff Sickel)

 IMPROVEMENTS

  * New public method `Repo.reset_index`. (Jelmer Vernooĳ)

  * Prevent duplicate parsing of loose files in objects
    directory when reading. Thanks to David Keijser for the
    report. (Jelmer Vernooĳ, #231)

0.9.9	2015-03-20

 SECURITY BUG FIXES

  * Fix buffer overflow in C implementation of pack apply_delta().
    (CVE-2015-0838)

    Thanks to Ivan Fratric of the Google Security Team for
    reporting this issue.
    (Jelmer Vernooĳ)

0.9.8	2014-11-30

 BUG FIXES

  * Various fixes to improve test suite running on Windows.
    (Gary van der Merwe)

  * Limit delta copy length to 64K in v2 pack files. (Robert Brown)

  * Strip newline from final ACKed SHA while fetching packs.
    (Michael Edgar)

  * Remove assignment to PyList_SIZE() that was causing segfaults on
    pypy. (Jelmer Vernooĳ, #196)

 IMPROVEMENTS

  * Add porcelain 'receive-pack' and 'upload-pack'. (Jelmer Vernooĳ)

  * Handle SIGINT signals in bin/dulwich. (Jelmer Vernooĳ)

  * Add 'status' support to bin/dulwich. (Jelmer Vernooĳ)

  * Add 'branch_create', 'branch_list', 'branch_delete' porcelain.
    (Jelmer Vernooĳ)

  * Add 'fetch' porcelain. (Jelmer Vernooĳ)

  * Add 'tag_delete' porcelain. (Jelmer Vernooĳ)

  * Add support for serializing/deserializing 'gpgsig' attributes in Commit.
    (Jelmer Vernooĳ)

 CHANGES

  * dul-web is now available as 'dulwich web-daemon'.
    (Jelmer Vernooĳ)

  * dulwich.porcelain.tag has been renamed to tag_create.
    dulwich.porcelain.list_tags has been renamed to tag_list.
    (Jelmer Vernooĳ)

 API CHANGES

  * Restore support for Python 2.6. (Jelmer Vernooĳ, Gary van der Merwe)


0.9.7	2014-06-08

 BUG FIXES

  * Fix tests dependent on hash ordering. (Michael Edgar)

  * Support staging symbolic links in Repo.stage.
    (Robert Brown)

  * Ensure that all files object are closed when running the test suite.
    (Gary van der Merwe)

  * When writing OFS_DELTA pack entries, write correct offset.
    (Augie Fackler)

  * Fix handler of larger copy operations in packs. (Augie Fackler)

  * Various fixes to improve test suite running on Windows.
    (Gary van der Merwe)

  * Fix logic for extra adds of identical files in rename detector.
    (Robert Brown)

 IMPROVEMENTS

  * Add porcelain 'status'. (Ryan Faulkner)

  * Add porcelain 'daemon'. (Jelmer Vernooĳ)

  * Add `dulwich.greenthreads` module which provides support
    for concurrency of some object store operations.
    (Fabien Boucher)

  * Various changes to improve compatibility with Python 3.
    (Gary van der Merwe, Hannu Valtonen, michael-k)

  * Add OpenStack Swift backed repository implementation
    in dulwich.contrib. See README.swift for details. (Fabien Boucher)

API CHANGES

  * An optional close function can be passed to the Protocol class. This will
    be called by its close method. (Gary van der Merwe)

  * All classes with close methods are now context managers, so that they can
    be easily closed using a `with` statement. (Gary van der Merwe)

  * Remove deprecated `num_objects` argument to `write_pack` methods.
    (Jelmer Vernooĳ)

 OTHER CHANGES

  * The 'dul-daemon' script has been removed. The same functionality
    is now available as 'dulwich daemon'. (Jelmer Vernooĳ)

0.9.6	2014-04-23

 IMPROVEMENTS

  * Add support for recursive add in 'git add'.
    (Ryan Faulkner, Jelmer Vernooĳ)

  * Add porcelain 'list_tags'. (Ryan Faulkner)

  * Add porcelain 'push'. (Ryan Faulkner)

  * Add porcelain 'pull'. (Ryan Faulkner)

  * Support 'http.proxy' in HttpGitClient.
    (Jelmer Vernooĳ, #1096030)

  * Support 'http.useragent' in HttpGitClient.
    (Jelmer Vernooĳ)

  * In server, wait for clients to send empty list of
    wants when talking to empty repository.
    (Damien Tournoud)

  * Various changes to improve compatibility with
    Python 3. (Gary van der Merwe)

 BUG FIXES

  * Support unseekable 'wsgi.input' streams.
    (Jonas Haag)

  * Raise TypeError when passing unicode() object
    to Repo.__getitem__.
    (Jonas Haag)

  * Fix handling of `reset` command in dulwich.fastexport.
    (Jelmer Vernooĳ, #1249029)

  * In client, don't wait for server to close connection
    first. Fixes hang when used against GitHub
    server implementation. (Siddharth Agarwal)

  * DeltaChainIterator: fix a corner case where an object is inflated as an
    object already in the repository.
    (Damien Tournoud, #135)

  * Stop leaking file handles during pack reload. (Damien Tournoud)

  * Avoid reopening packs during pack cache reload. (Jelmer Vernooĳ)

 API CHANGES

  * Drop support for Python 2.6. (Jelmer Vernooĳ)

0.9.5	2014-02-23

 IMPROVEMENTS

  * Add porcelain 'tag'. (Ryan Faulkner)

  * New module `dulwich.objectspec` for parsing strings referencing
    objects and commit ranges. (Jelmer Vernooĳ)

  * Add shallow branch support. (milki)

  * Allow passing urllib2 `opener` into HttpGitClient.
    (Dov Feldstern, #909037)

 CHANGES

  * Drop support for Python 2.4 and 2.5. (Jelmer Vernooĳ)

 API CHANGES

  * Remove long deprecated ``Repo.commit``, ``Repo.get_blob``,
    ``Repo.tree`` and ``Repo.tag``. (Jelmer Vernooĳ)

  * Remove long deprecated ``Repo.revision_history`` and ``Repo.ref``.
    (Jelmer Vernooĳ)

  * Remove long deprecated ``Tree.entries``. (Jelmer Vernooĳ)

 BUG FIXES

  * Raise KeyError rather than TypeError when passing in
    unicode object of length 20 or 40 to Repo.__getitem__.
    (Jelmer Vernooĳ)

  * Use 'rm' rather than 'unlink' in tests, since the latter
    does not exist on OpenBSD and other platforms.
    (Dmitrij D. Czarkoff)

0.9.4	2013-11-30

 IMPROVEMENTS

  * Add ssh_kwargs attribute to ParamikoSSHVendor. (milki)

  * Add Repo.set_description(). (Víðir Valberg Guðmundsson)

  * Add a basic `dulwich.porcelain` module. (Jelmer Vernooĳ, Marcin Kuzminski)

  * Various performance improvements for object access.
    (Jelmer Vernooĳ)

  * New function `get_transport_and_path_from_url`,
    similar to `get_transport_and_path` but only
    supports URLs.
    (Jelmer Vernooĳ)

  * Add support for file:// URLs in `get_transport_and_path_from_url`.
    (Jelmer Vernooĳ)

  * Add LocalGitClient implementation.
    (Jelmer Vernooĳ)

 BUG FIXES

  * Support filesystems with 64bit inode and device numbers.
    (André Roth)

 CHANGES

  * Ref handling has been moved to dulwich.refs.
    (Jelmer Vernooĳ)

 API CHANGES

  * Remove long deprecated RefsContainer.set_ref().
    (Jelmer Vernooĳ)

  * Repo.ref() is now deprecated in favour of Repo.refs[].
    (Jelmer Vernooĳ)

FEATURES

  * Add support for graftpoints. (milki)

0.9.3	2013-09-27

 BUG FIXES

  * Fix path for stdint.h in MANIFEST.in. (Jelmer Vernooĳ)

0.9.2	2013-09-26

 BUG FIXES

  * Include stdint.h in MANIFEST.in (Mark Mikofski)

0.9.1	2013-09-22

 BUG FIXES

  * Support lookups of 40-character refs in BaseRepo.__getitem__. (Chow Loong Jin, Jelmer Vernooĳ)

  * Fix fetching packs with side-band-64k capability disabled. (David Keijser, Jelmer Vernooĳ)

  * Several fixes in send-pack protocol behaviour - handling of empty pack files and deletes.
    (milki, #1063087)

  * Fix capability negotiation when fetching packs over HTTP.
    (#1072461, William Grant)

  * Enforce determine_wants returning an empty list rather than None. (Fabien Boucher, Jelmer Vernooĳ)

  * In the server, support pushes just removing refs. (Fabien Boucher, Jelmer Vernooĳ)

 IMPROVEMENTS

  * Support passing a single revision to BaseRepo.get_walker() rather than a list of revisions.g
    (Alberto Ruiz)

  * Add `Repo.get_description` method. (Jelmer Vernooĳ)

  * Support thin packs in Pack.iterobjects() and Pack.get_raw().
    (William Grant)

  * Add `MemoryObjectStore.add_pack` and `MemoryObjectStore.add_thin_pack` methods.
    (David Bennett)

  * Add paramiko-based SSH vendor. (Aaron O'Mullan)

  * Support running 'dulwich.server' and 'dulwich.web' using 'python -m'.
    (Jelmer Vernooĳ)

  * Add ObjectStore.close(). (Jelmer Vernooĳ)

  * Raise appropriate NotImplementedError when encountering dumb HTTP servers.
    (Jelmer Vernooĳ)

 API CHANGES

  * SSHVendor.connect_ssh has been renamed to SSHVendor.run_command.
    (Jelmer Vernooĳ)

  * ObjectStore.add_pack() now returns a 3-tuple. The last element will be an
    abort() method that can be used to cancel the pack operation.
    (Jelmer Vernooĳ)

0.9.0	2013-05-31

 BUG FIXES

  * Push efficiency - report missing objects only. (#562676, Artem Tikhomirov)

  * Use indentation consistent with C Git in config files.
    (#1031356, Curt Moore, Jelmer Vernooĳ)

  * Recognize and skip binary files in diff function.
    (Takeshi Kanemoto)

  * Fix handling of relative paths in dulwich.client.get_transport_and_path.
    (Brian Visel, #1169368)

  * Preserve ordering of entries in configuration.
    (Benjamin Pollack)

  * Support ~ expansion in SSH client paths. (milki, #1083439)

  * Support relative paths in alternate paths.
    (milki, Michel Lespinasse, #1175007)

  * Log all error messages from wsgiref server to the logging module. This
    makes the test suit quiet again. (Gary van der Merwe)

  * Support passing None for empty tree in changes_from_tree.
    (Kevin Watters)

  * Support fetching empty repository in client. (milki, #1060462)

 IMPROVEMENTS:

  * Add optional honor_filemode flag to build_index_from_tree.
    (Mark Mikofski)

  * Support core/filemode setting when building trees. (Jelmer Vernooĳ)

  * Add chapter on tags in tutorial. (Ryan Faulkner)

 FEATURES

  * Add support for mergetags. (milki, #963525)

  * Add support for posix shell hooks. (milki)

0.8.7	2012-11-27

 BUG FIXES

  * Fix use of alternates in ``DiskObjectStore``.{__contains__,__iter__}.
    (Dmitriy)

  * Fix compatibility with Python 2.4. (David Carr)

0.8.6	2012-11-09

 API CHANGES

  * dulwich.__init__ no longer imports client, protocol, repo and
    server modules. (Jelmer Vernooĳ)

 FEATURES

  * ConfigDict now behaves more like a dictionary.
    (Adam 'Cezar' Jenkins, issue #58)

  * HTTPGitApplication now takes an optional
    `fallback_app` argument. (Jonas Haag, issue #67)

  * Support for large pack index files. (Jameson Nash)

 TESTING

  * Make index entry tests a little bit less strict, to cope with
    slightly different behaviour on various platforms.
    (Jelmer Vernooĳ)

  * ``setup.py test`` (available when setuptools is installed) now
    runs all tests, not just the basic unit tests.
    (Jelmer Vernooĳ)

 BUG FIXES

  * Commit._deserialize now actually deserializes the current state rather than
    the previous one. (Yifan Zhang, issue #59)

  * Handle None elements in lists of TreeChange objects. (Alex Holmes)

  * Support cloning repositories without HEAD set.
    (D-Key, Jelmer Vernooĳ, issue #69)

  * Support ``MemoryRepo.get_config``. (Jelmer Vernooĳ)

  * In ``get_transport_and_path``, pass extra keyword arguments on to
    HttpGitClient. (Jelmer Vernooĳ)

0.8.5	2012-03-29

 BUG FIXES

  * Avoid use of 'with' in dulwich.index. (Jelmer Vernooĳ)

  * Be a little bit strict about OS behaviour in index tests.
    Should fix the tests on Debian GNU/kFreeBSD. (Jelmer Vernooĳ)

0.8.4	2012-03-28

 BUG FIXES

  * Options on the same line as sections in config files are now supported.
    (Jelmer Vernooĳ, #920553)

  * Only negotiate capabilities that are also supported by the server.
    (Rod Cloutier, Risto Kankkunen)

  * Fix parsing of invalid timezone offsets with two minus signs.
    (Jason R. Coombs, #697828)

  * Reset environment variables during tests, to avoid
    test isolation leaks reading ~/.gitconfig. (Risto Kankkunen)

 TESTS

  * $HOME is now explicitly specified for tests that use it to read
    ``~/.gitconfig``, to prevent test isolation issues.
    (Jelmer Vernooĳ, #920330)

 FEATURES

  * Additional arguments to get_transport_and_path are now passed
    on to the constructor of the transport. (Sam Vilain)

  * The WSGI server now transparently handles when a git client submits data
    using Content-Encoding: gzip.
    (David Blewett, Jelmer Vernooĳ)

  * Add dulwich.index.build_index_from_tree(). (milki)

0.8.3	2012-01-21

 FEATURES

  * The config parser now supports the git-config file format as
    described in git-config(1) and can write git config files.
    (Jelmer Vernooĳ, #531092, #768687)

  * ``Repo.do_commit`` will now use the user identity from
    .git/config or ~/.gitconfig if none was explicitly specified.
    (Jelmer Vernooĳ)

 BUG FIXES

  * Allow ``determine_wants`` methods to include the zero sha in their
    return value. (Jelmer Vernooĳ)

0.8.2	2011-12-18

 BUG FIXES

  * Cope with different zlib buffer sizes in sha1 file parser.
    (Jelmer Vernooĳ)

  * Fix get_transport_and_path for HTTP/HTTPS URLs.
    (Bruno Renié)

  * Avoid calling free_objects() on NULL in error cases. (Chris Eberle)

  * Fix use --bare argument to 'dulwich init'. (Chris Eberle)

  * Properly abort connections when the determine_wants function
    raises an exception. (Jelmer Vernooĳ, #856769)

  * Tweak xcodebuild hack to deal with more error output.
    (Jelmer Vernooĳ, #903840)

 FEATURES

  * Add support for retrieving tarballs from remote servers.
    (Jelmer Vernooĳ, #379087)

  * New method ``update_server_info`` which generates data
    for dumb server access. (Jelmer Vernooĳ, #731235)

0.8.1	2011-10-31

 FEATURES

  * Repo.do_commit has a new argument 'ref'.

  * Repo.do_commit has a new argument 'merge_heads'. (Jelmer Vernooĳ)

  * New ``Repo.get_walker`` method. (Jelmer Vernooĳ)

  * New ``Repo.clone`` method. (Jelmer Vernooĳ, #725369)

  * ``GitClient.send_pack`` now supports the 'side-band-64k' capability.
    (Jelmer Vernooĳ)

  * ``HttpGitClient`` which supports the smart server protocol over
    HTTP. "dumb" access is not yet supported. (Jelmer Vernooĳ, #373688)

  * Add basic support for alternates. (Jelmer Vernooĳ, #810429)

 CHANGES

  * unittest2 or python >= 2.7 is now required for the testsuite.
    testtools is no longer supported. (Jelmer Vernooĳ, #830713)

 BUG FIXES

  * Fix compilation with older versions of MSVC.  (Martin gz)

  * Special case 'refs/stash' as a valid ref. (Jelmer Vernooĳ, #695577)

  * Smart protocol clients can now change refs even if they are
    not uploading new data. (Jelmer Vernooĳ, #855993)

  * Don't compile C extensions when running in pypy.
    (Ronny Pfannschmidt, #881546)

  * Use different name for strnlen replacement function to avoid clashing
    with system strnlen. (Jelmer Vernooĳ, #880362)

 API CHANGES

  * ``Repo.revision_history`` is now deprecated in favor of ``Repo.get_walker``.
    (Jelmer Vernooĳ)

0.8.0	2011-08-07

 FEATURES

  * New DeltaChainIterator abstract class for quickly iterating all objects in
    a pack, with implementations for pack indexing and inflation.
    (Dave Borowitz)

  * New walk module with a Walker class for customizable commit walking.
    (Dave Borowitz)

  * New tree_changes_for_merge function in diff_tree. (Dave Borowitz)

  * Easy rename detection in RenameDetector even without find_copies_harder.
    (Dave Borowitz)

 BUG FIXES

  * Avoid storing all objects in memory when writing pack.
    (Jelmer Vernooĳ, #813268)

  * Support IPv6 for git:// connections. (Jelmer Vernooĳ, #801543)

  * Improve performance of Repo.revision_history(). (Timo Schmid, #535118)

  * Fix use of SubprocessWrapper on Windows. (Paulo Madeira, #670035)

  * Fix compilation on newer versions of Mac OS X (Lion and up). (Ryan McKern, #794543)

  * Prevent raising ValueError for correct refs in RefContainer.__delitem__.

  * Correctly return a tuple from MemoryObjectStore.get_raw. (Dave Borowitz)

  * Fix a bug in reading the pack checksum when there are fewer than 20 bytes
    left in the buffer. (Dave Borowitz)

  * Support ~ in git:// URL paths. (Jelmer Vernooĳ, #813555)

  * Make ShaFile.__eq__ work when other is not a ShaFile. (Dave Borowitz)

  * ObjectStore.get_graph_walker() now no longer yields the same
    revision more than once. This has a significant improvement for
    performance when wide revision graphs are involved.
    (Jelmer Vernooĳ, #818168)

  * Teach ReceivePackHandler how to read empty packs. (Dave Borowitz)

  * Don't send a pack with duplicates of the same object. (Dave Borowitz)

  * Teach the server how to serve a clone of an empty repo. (Dave Borowitz)

  * Correctly advertise capabilities during receive-pack. (Dave Borowitz)

  * Fix add/add and add/rename conflicts in tree_changes_for_merge.
    (Dave Borowitz)

  * Use correct MIME types in web server. (Dave Borowitz)

 API CHANGES

  * write_pack no longer takes the num_objects argument and requires an object
    to be passed in that is iterable (rather than an iterator) and that
    provides __len__.  (Jelmer Vernooĳ)

  * write_pack_data has been renamed to write_pack_objects and no longer takes a
    num_objects argument. (Jelmer Vernooĳ)

  * take_msb_bytes, read_zlib_chunks, unpack_objects, and
    PackStreamReader.read_objects now take an additional argument indicating a
    crc32 to compute. (Dave Borowitz)

  * PackObjectIterator was removed; its functionality is still exposed by
    PackData.iterobjects. (Dave Borowitz)

  * Add a sha arg to write_pack_object to incrementally compute a SHA.
    (Dave Borowitz)

  * Include offset in PackStreamReader results. (Dave Borowitz)

  * Move PackStreamReader from server to pack. (Dave Borowitz)

  * Extract a check_length_and_checksum, compute_file_sha, and
    pack_object_header pack helper functions. (Dave Borowitz)

  * Extract a compute_file_sha function. (Dave Borowitz)

  * Remove move_in_thin_pack as a separate method; add_thin_pack now completes
    the thin pack and moves it in in one step. Remove ThinPackData as well.
    (Dave Borowitz)

  * Custom buffer size in read_zlib_chunks. (Dave Borowitz)

  * New UnpackedObject data class that replaces ad-hoc tuples in the return
    value of unpack_object and various DeltaChainIterator methods.
    (Dave Borowitz)

  * Add a lookup_path convenience method to Tree. (Dave Borowitz)

  * Optionally create RenameDetectors without passing in tree SHAs.
    (Dave Borowitz)

  * Optionally include unchanged entries in RenameDetectors. (Dave Borowitz)

  * Optionally pass a RenameDetector to tree_changes. (Dave Borowitz)

  * Optionally pass a request object through to server handlers. (Dave Borowitz)

 TEST CHANGES

  * If setuptools is installed, "python setup.py test" will now run the testsuite.
    (Jelmer Vernooĳ)

  * Add a new build_pack test utility for building packs from a simple spec.
    (Dave Borowitz)

  * Add a new build_commit_graph test utility for building commits from a
    simple spec. (Dave Borowitz)

0.7.1	2011-04-12

 BUG FIXES

  * Fix double decref in _diff_tree.c. (Ted Horst, #715528)

  * Fix the build on Windows. (Pascal Quantin)

  * Fix get_transport_and_path compatibility with pre-2.6.5 versions of Python.
    (Max Bowsher, #707438)

  * BaseObjectStore.determine_wants_all no longer breaks on zero SHAs.
    (Jelmer Vernooĳ)

  * write_tree_diff() now supports submodules.
    (Jelmer Vernooĳ)

  * Fix compilation for XCode 4 and older versions of distutils.sysconfig.
    (Daniele Sluijters)

 IMPROVEMENTS

  * Sphinxified documentation. (Lukasz Balcerzak)

  * Add Pack.keep.(Marc Brinkmann)

 API CHANGES

  * The order of the parameters to Tree.add(name, mode, sha) has changed, and
    is now consistent with the rest of Dulwich. Existing code will still
    work but print a DeprecationWarning. (Jelmer Vernooĳ, #663550)

  * Tree.entries() is now deprecated in favour of Tree.items() and
    Tree.iteritems(). (Jelmer Vernooĳ)

0.7.0	2011-01-21

 FEATURES

  * New `dulwich.diff_tree` module for simple content-based rename detection.
    (Dave Borowitz)

  * Add Tree.items(). (Jelmer Vernooĳ)

  * Add eof() and unread_pkt_line() methods to Protocol. (Dave Borowitz)

  * Add write_tree_diff(). (Jelmer Vernooĳ)

  * Add `serve_command` function for git server commands as executables.
    (Jelmer Vernooĳ)

  * dulwich.client.get_transport_and_path now supports rsync-style repository URLs.
    (Dave Borowitz, #568493)

 BUG FIXES

  * Correct short-circuiting operation for no-op fetches in the server.
    (Dave Borowitz)

  * Support parsing git mbox patches without a version tail, as generated by
    Mercurial.  (Jelmer Vernooĳ)

  * Fix dul-receive-pack and dul-upload-pack. (Jelmer Vernooĳ)

  * Zero-padded file modes in Tree objects no longer trigger an exception but
    the check code warns about them. (Augie Fackler, #581064)

  * Repo.init() now honors the mkdir flag. (#671159)

  * The ref format is now checked when setting a ref rather than when reading it back.
    (Dave Borowitz, #653527)

  * Make sure pack files are closed correctly. (Tay Ray Chuan)

 DOCUMENTATION

  * Run the tutorial inside the test suite. (Jelmer Vernooĳ)

  * Reorganized and updated the tutorial. (Jelmer Vernooĳ, Dave Borowitz, #610550,
     #610540)


0.6.2	2010-10-16

 BUG FIXES

  * HTTP server correctly handles empty CONTENT_LENGTH. (Dave Borowitz)

  * Don't error when creating GitFiles with the default mode. (Dave Borowitz)

  * ThinPackData.from_file now works with resolve_ext_ref callback.
    (Dave Borowitz)

  * Provide strnlen() on mingw32 which doesn't have it. (Hans Kolek)

  * Set bare=true in the configuration for bare repositories. (Dirk Neumann)

 FEATURES

  * Use slots for core objects to save up on memory. (Jelmer Vernooĳ)

  * Web server supports streaming progress/pack output. (Dave Borowitz)

  * New public function dulwich.pack.write_pack_header. (Dave Borowitz)

  * Distinguish between missing files and read errors in HTTP server.
    (Dave Borowitz)

  * Initial work on support for fastimport using python-fastimport.
    (Jelmer Vernooĳ)

  * New dulwich.pack.MemoryPackIndex class. (Jelmer Vernooĳ)

  * Delegate SHA peeling to the object store.  (Dave Borowitz)

 TESTS

  * Use GitFile when modifying packed-refs in tests. (Dave Borowitz)

  * New tests in test_web with better coverage and fewer ad-hoc mocks.
    (Dave Borowitz)

  * Standardize quote delimiters in test_protocol. (Dave Borowitz)

  * Fix use when testtools is installed. (Jelmer Vernooĳ)

  * Add trivial test for write_pack_header. (Jelmer Vernooĳ)

  * Refactor some of dulwich.tests.compat.server_utils. (Dave Borowitz)

  * Allow overwriting id property of objects in test utils. (Dave Borowitz)

  * Use real in-memory objects rather than stubs for server tests.
    (Dave Borowitz)

  * Clean up MissingObjectFinder. (Dave Borowitz)

 API CHANGES

  * ObjectStore.iter_tree_contents now walks contents in depth-first, sorted
    order. (Dave Borowitz)

  * ObjectStore.iter_tree_contents can optionally yield tree objects as well.
    (Dave Borowitz).

  * Add side-band-64k support to ReceivePackHandler. (Dave Borowitz)

  * Change server capabilities methods to classmethods. (Dave Borowitz)

  * Tweak server handler injection. (Dave Borowitz)

  * PackIndex1 and PackIndex2 now subclass FilePackIndex, which isg
    itself a subclass of PackIndex. (Jelmer Vernooĳ)

 DOCUMENTATION

  * Add docstrings for various functions in dulwich.objects. (Jelmer Vernooĳ)

  * Clean up docstrings in dulwich.protocol. (Dave Borowitz)

  * Explicitly specify allowed protocol commands to
    ProtocolGraphWalker.read_proto_line.  (Dave Borowitz)

  * Add utility functions to DictRefsContainer. (Dave Borowitz)


0.6.1	2010-07-22

 BUG FIXES

  * Fix memory leak in C implementation of sorted_tree_items. (Dave Borowitz)

  * Use correct path separators for named repo files. (Dave Borowitz)

  * python > 2.7 and testtools-based test runners will now also pick up skipped
    tests correctly. (Jelmer Vernooĳ)

 FEATURES

  * Move named file initialization to BaseRepo. (Dave Borowitz)

  * Add logging utilities and git/HTTP server logging. (Dave Borowitz)

  * The GitClient interface has been cleaned up and instances are now reusable.
    (Augie Fackler)

  * Allow overriding paths to executables in GitSSHClient.g
    (Ross Light, Jelmer Vernooĳ, #585204)

  * Add PackBasedObjectStore.pack_loose_objects(). (Jelmer Vernooĳ)

 TESTS

  * Add tests for sorted_tree_items and C implementation. (Dave Borowitz)

  * Add a MemoryRepo that stores everything in memory. (Dave Borowitz)

  * Quiet logging output from web tests. (Dave Borowitz)

  * More flexible version checking for compat tests. (Dave Borowitz)

  * Compat tests for servers with and without side-band-64k. (Dave Borowitz)

 CLEANUP

  * Clean up file headers. (Dave Borowitz)

 TESTS

  * Use GitFile when modifying packed-refs in tests. (Dave Borowitz)

 API CHANGES

  * dulwich.pack.write_pack_index_v{1,2} now take a file-like object
    rather than a filename. (Jelmer Vernooĳ)

  * Make dul-daemon/dul-web trivial wrappers around server functionality.
    (Dave Borowitz)

  * Move reference WSGI handler to web.py. (Dave Borowitz)

  * Factor out _report_status in ReceivePackHandler. (Dave Borowitz)

  * Factor out a function to convert a line to a pkt-line. (Dave Borowitz)


0.6.0	2010-05-22

note: This list is most likely incomplete for 0.6.0.

 BUG FIXES
g
  * Fix ReceivePackHandler to disallow removing refs without delete-refs.
    (Dave Borowitz)

  * Deal with capabilities required by the client, even if theyg
    can not be disabled in the server. (Dave Borowitz)

  * Fix trailing newlines in generated patch files.
    (Jelmer Vernooĳ)

  * Implement RefsContainer.__contains__. (Jelmer Vernooĳ)

  * Cope with \r in ref files on Windows. (
    http://github.com/jelmer/dulwich/issues/#issue/13, Jelmer Vernooĳ)

  * Fix GitFile breakage on Windows. (Anatoly Techtonik, #557585)

  * Support packed ref deletion with no peeled refs. (Augie Fackler)

  * Fix send pack when there is nothing to fetch. (Augie Fackler)

  * Fix fetch if no progress function is specified. (Augie Fackler)

  * Allow double-staging of files that are deleted in the index.g
    (Dave Borowitz)

  * Fix RefsContainer.add_if_new to support dangling symrefs.
    (Dave Borowitz)

  * Non-existent index files in non-bare repositories are now treated asg
    empty. (Dave Borowitz)

  * Always update ShaFile.id when the contents of the object get changed.g
    (Jelmer Vernooĳ)

  * Various Python2.4-compatibility fixes. (Dave Borowitz)

  * Fix thin pack handling. (Dave Borowitz)
g
 FEATURES

  * Add include-tag capability to server. (Dave Borowitz)

  * New dulwich.fastexport module that can generate fastexportg
    streams. (Jelmer Vernooĳ)

  * Implemented BaseRepo.__contains__. (Jelmer Vernooĳ)

  * Add __setitem__ to DictRefsContainer. (Dave Borowitz)

  * Overall improvements checking Git objects. (Dave Borowitz)

  * Packs are now verified while they are received. (Dave Borowitz)

 TESTS

  * Add framework for testing compatibility with C Git. (Dave Borowitz)

  * Add various tests for the use of non-bare repositories. (Dave Borowitz)

  * Cope with diffstat not being available on all platforms.g
    (Tay Ray Chuan, Jelmer Vernooĳ)

  * Add make_object and make_commit convenience functions to test utils.
    (Dave Borowitz)

 API BREAKAGES

  * The 'committer' and 'message' arguments to Repo.do_commit() haveg
    been swapped. 'committer' is now optional. (Jelmer Vernooĳ)

  * Repo.get_blob, Repo.commit, Repo.tag and Repo.tree are now deprecated.
    (Jelmer Vernooĳ)

  * RefsContainer.set_ref() was renamed to RefsContainer.set_symbolic_ref(),
    for clarity. (Jelmer Vernooĳ)

 API CHANGES

  * The primary serialization APIs in dulwich.objects now workg
    with chunks of strings rather than with full-text strings.g
    (Jelmer Vernooĳ)

0.5.02010-03-03

 BUG FIXES

  * Support custom fields in commits (readonly). (Jelmer Vernooĳ)

  * Improved ref handling. (Dave Borowitz)

  * Rework server protocol to be smarter and interoperate with cgit client.
    (Dave Borowitz)

  * Add a GitFile class that uses the same locking protocol for writes asg
    cgit. (Dave Borowitz)

  * Cope with forward slashes correctly in the index on Windows.
    (Jelmer Vernooĳ, #526793)

 FEATURES

  * --pure option to setup.py to allow building/installing without the Cg
    extensions. (Hal Wine, Anatoly Techtonik, Jelmer Vernooĳ, #434326)

  * Implement Repo.get_config(). (Jelmer Vernooĳ, Augie Fackler)

  * HTTP dumb and smart server. (Dave Borowitz)

  * Add abstract baseclass for Repo that does not require file systemg
    operations. (Dave Borowitz)

0.4.1	2010-01-03

 FEATURES

  * Add ObjectStore.iter_tree_contents(). (Jelmer Vernooĳ)

  * Add Index.changes_from_tree(). (Jelmer Vernooĳ)

  * Add ObjectStore.tree_changes(). (Jelmer Vernooĳ)

  * Add functionality for writing patches in dulwich.patch.
    (Jelmer Vernooĳ)

0.4.0	2009-10-07

 DOCUMENTATION

  * Added tutorial.

 API CHANGES

  * dulwich.object_store.tree_lookup_path will now return the mode andg
    sha of the object found rather than the object itself.

 BUG FIXES

  * Use binascii.hexlify / binascii.unhexlify for better performance.

  * Cope with extra unknown data in index files by ignoring it (for now).

  * Add proper error message when server unexpectedly hangs up. (#415843)

  * Correctly write opcode for equal in create_delta.

0.3.3	2009-07-23

 FEATURES

  * Implement ShaFile.__hash__().

  * Implement Tree.__len__()

 BUG FIXES
 g
  * Check for 'objects' and 'refs' directories
    when looking for a Git repository. (#380818)

0.3.2	2009-05-20

 BUG FIXES

  * Support the encoding field in Commits.
 g
  * Some Windows compatibility fixes.

  * Fixed several issues in commit support.

 FEATURES

  * Basic support for handling submodules.

0.3.1	2009-05-13

 FEATURES

  * Implemented Repo.__getitem__, Repo.__setitem__ and Repo.__delitem__ tog
    access content.

 API CHANGES

  * Removed Repo.set_ref, Repo.remove_ref, Repo.tags, Repo.get_refs andg
    Repo.heads in favor of Repo.refs, a dictionary-like object for accessing
    refs.

 BUG FIXES

  * Removed import of 'sha' module in objects.py, which was causingg
    deprecation warnings on Python 2.6.

0.3.0	2009-05-10

 FEATURES

  * A new function 'commit_tree' has been added that can commit a treeg
    based on an index.

 BUG FIXES

  * The memory usage when generating indexes has been significantly reduced.
g
  * A memory leak in the C implementation of parse_tree has been fixed.

  * The send-pack smart server command now works. (Thanks Scott Chacon)

  * The handling of short timestamps (less than 10 digits) has been fixed.

  * The handling of timezones has been fixed.

0.2.1	2009-04-30

 BUG FIXES

  * Fix compatibility with Python2.4.

0.2.0	2009-04-30

 FEATURES

  * Support for activity reporting in smart protocol client.

  * Optional C extensions for better performance in a couple ofg
    places that are performance-critical.

0.1.1	2009-03-13

 BUG FIXES

  * Fixed regression in Repo.find_missing_objects()

  * Don't fetch ^{} objects from remote hosts, as requesting themg
    causes a hangup.

  * Always write pack to disk completely before calculating checksum.

 FEATURES

  * Allow disabling thin packs when talking to remote hosts.

0.1.0	2009-01-24

  * Initial release.
