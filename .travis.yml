sudo: false
cache: pip

env:
  - PYTHONHASHSEED=random
    TEST_REQUIRE="gevent greenlet geventhttpclient fastimport"
    PURE=false

matrix:
  include:
    - python: 2.7
      language: python
    - python: 3.4
      language: python
    - python: 3.5
      language: python
    - python: 3.6
      language: python
    - python: pypy3.5
      language: python
    - python: pypy
      language: python
      env: TEST_REQUIRE=fastimport
    - python: 3.7
      env: TEST_REQUIRE=fastimport
      dist: xenial
      sudo: true
      language: python
    - python: 3.6
      env: PURE=true
      language: python
    - python: 2.7
      env: PURE=true
      language: python
    # flakes checker fails on python 3.8-dev:
    #- python: 3.8-dev
    #  env: TEST_REQUIRE=fastimport
    #  dist: xenial
    #  sudo: true
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64
           PLAT=manylinux1_x86_64
      install:
        - docker pull $DOCKER_IMAGE

      script:
        - docker run --rm -e PLAT=$PLAT -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/travis/build-wheels.sh
        - ls wheelhouse/
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux1_i686
           PRE_CMD=linux32
           PLAT=manylinux1_i686
      install:
        - docker pull $DOCKER_IMAGE

      script:
        - docker run --rm -e PLAT=$PLAT -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/travis/build-wheels.sh
        - ls wheelhouse/
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux2010_x86_64
           PLAT=manylinux2010_x86_64

      install:
        - docker pull $DOCKER_IMAGE

      script:
        - docker run --rm -e PLAT=$PLAT -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/travis/build-wheels.sh
        - ls wheelhouse/

install:
  - travis_retry pip install -U pip coverage codecov flake8 $TEST_REQUIRE

script:
  - if [ $PURE = false ]; then python setup.py build_ext -i; fi
  - python -m coverage run -p -m unittest dulwich.tests.test_suite

  # Style
  - make style

  - if [ $PURE = true ]; then SETUP_ARGS=--pure; fi
  - python setup.py $SETUP_ARGS bdist_wheel

after_success:
  - python -m coverage combine
  - codecov

deploy:
  provider: pypi
  user: dulwich-bot
  password:
    secure: Q8DDDojBugQWzXvmmEQiU90UkVPk+OYoFZwv1H9LYpQ4u5CfwQNWpf8qXYhlGMdr/gzWaSWsqLvgWLpzfkvqS4Vyk2bO9mr+dSskfD8uwc82LiiL9CNd/NY03CjH9RaFgVMD/+exMjY/yCtlyH1jL4kjgOyNnC+x4B37CliZHcE=
  skip_cleanup: true
  skip_existing: true
  file_glob: true
  file:
    - dist/dulwich*.whl
    - dist/dulwich*.tar.gz
  on:
    tags: true
    repo: dulwich/dulwich
